{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategorias","useState","inputValue","setinputValue","labelValue","setlabelValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagenes","console","log","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"yLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,mBAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,EAAoCF,mBAAS,sBAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAqBA,OACI,uBAAMC,SAXc,SAACC,GACrBA,EAAEC,iBAEEN,EAAWO,OAAOC,OAAO,IACzBV,GAAc,SAAAW,GAAI,OAAGT,GAAH,mBAAiBS,OACnCR,EAAc,MAMlB,UACI,uBACAS,KAAK,OACLC,MAAOX,EACPY,SAxBiB,SAACP,GACtBJ,EAAcI,EAAEQ,OAAOF,OACpBX,EAAWQ,OAAO,EACjBL,EAAc,YAEdA,EAAc,gBAqBd,gCAAQD,Q,QCjCPY,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAGlC,OACI,sBAAKC,UAAU,6CAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,iDAEiCO,UAAUF,GAF3C,+DAGDG,MAAMR,GAHL,cAGbS,EAHa,gBAICA,EAAKC,OAJN,uBAIZC,EAJY,EAIZA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAChB,MAAM,CACFhB,GAAGgB,EAAIhB,GACPC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QAVtB,kBAcZY,GAdY,4CAAH,sDCGPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAGrB,ECJwB,SAAEA,GAE1B,MAA0BvB,mBAAS,CAC/B6B,KAAK,GACLO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WAENjB,EAAQC,GACHiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAIvB,CAACb,IAIIc,EDjBuBK,CAAanB,GAA/BoB,EAAZ,EAAOd,KAAcO,EAArB,EAAqBA,QAGrB,OAFAQ,QAAQC,IAAIT,GAGR,qCACI,oBAAIjB,UAAU,wCAAd,SAAuDI,IACtDa,GAAW,wCAEZ,qBAAKjB,UAAU,YAAf,SAGYwB,EAASZ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEIA,GADCA,EAAIhB,aEhBxB8B,EAAc,WAIvB,MAAoC9C,mBAAS,CAAC,gBAA9C,mBAAO+C,EAAP,KAAmBhD,EAAnB,KAGA,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEIgD,EAAWhB,KAAI,SAAAR,GAAQ,OACf,cAAC,EAAD,CAEAA,SAAUA,GADLA,UCbzByB,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.76736de1.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setcategorias}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('Escriba Aquí');\r\n\r\n    const [labelValue, setlabelValue] = useState('Mínimo 8 letras')\r\n\r\n    const handleInputChange =(e)=>{\r\n        setinputValue(e.target.value);\r\n        if(inputValue.length>3){\r\n            setlabelValue('Aceptado');\r\n        }else{\r\n            setlabelValue('Rechazado');\r\n        }\r\n    }\r\n\r\n    const handleInputSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length>2){\r\n            setcategorias(cats=>[inputValue,...cats]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleInputSubmit}>\r\n            <input \r\n            type='text'\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n            <label>{labelValue}</label>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategorias: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__backInLeft\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getGifs = async(category) =>{\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=OxJ1jc4Dtyjwg5gPeVPB0PnLvbt3Rh60`\r\n    const resp= await fetch(url);\r\n    const {data}= await resp.json();\r\n    \r\n    const gifs=data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:imagenes,loading}=useFetchGifs(category);\r\n    console.log(loading);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__backInLeft\">{category}</h3>\r\n            {loading && <p>Loading</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n                \r\n                    {\r\n                        imagenes.map( img =>(\r\n                            <GifGridItem \r\n                            key={img.id}\r\n                            {...img }\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState,useEffect } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category)=>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n        \r\n    },[category])\r\n\r\n\r\n\r\n    return state;\r\n\r\n}","import React,{useState} from 'react'\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp= ()=>{\r\n\r\n    //const categorias=['Dragon Ball','Naruto','Triple H'];\r\n\r\n    const [categorias, setcategorias] = useState(['Dragon Ball'])\r\n\r\n\r\n    return(\r\n        <>\r\n        <h1>GifExpertApp</h1>\r\n        <AddCategory setcategorias={setcategorias} />\r\n        <hr />\r\n        {\r\n            categorias.map(category=>(\r\n                    <GifGrid \r\n                    key={category}\r\n                    category={category}/>\r\n                    ))\r\n        }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\n\n\nReactDOM.render(\n    <GifExpertApp />, \n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}